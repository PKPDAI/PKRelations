<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<link rel="stylesheet" type="text/css" href="style-vis.css"/>

<script type="text/javascript" src="client/lib/head.load.min.js"></script>

<title> Strict DTD XHTML Example </title>
</head>
<body>
<p>
Please Choose a Days:
<br /><br />
<select name="day">
<option selected="selected">Monday</option>
<option>Tuesday</option>
<option>Wednesday</option>
</select>
</p>

<h2> Brat annotationsssss </h2>

<div id="embedding-live-example"></div>

<script type="text/javascript">

	var bratLocation = 'http://weaver.nlplab.org/~brat/demo/v1.3';
	head.js(
    // External libraries
    bratLocation + '/client/lib/jquery.min.js',
    bratLocation + '/client/lib/jquery.svg.min.js',
    bratLocation + '/client/lib/jquery.svgdom.min.js',

    // brat helper modules
    bratLocation + '/client/src/configuration.js',
    bratLocation + '/client/src/util.js',
    bratLocation + '/client/src/annotation_log.js',
    bratLocation + '/client/lib/webfont.js',

    // brat modules
    bratLocation + '/client/src/dispatcher.js',
    bratLocation + '/client/src/url_monitor.js',
    bratLocation + '/client/src/visualizer.js'
    );

    var webFontURLs = [
    	bratLocation + '/static/fonts/Astloch-Bold.ttf',
    	bratLocation + '/static/fonts/PT_Sans-Caption-Web-Regular.ttf',
    	bratLocation + '/static/fonts/Liberation_Sans-Regular.ttf'
	];

head.ready(function() {
    Util.embed(
        // id of the div element where brat should embed the visualisations
        'embedding-live-example',
        // object containing collection data
        collData,
        // object containing document data
        docData,
        // Array containing locations of the visualisation fonts
        webFontURLs
        );
});


	
var collData = {
   entity_types: [ {
           type   : 'Person',
           /* The labels are used when displaying the annotion, in this case
               we also provide a short-hand "Per" for cases where
               abbreviations are preferable */
           labels : ['Person', 'Per'],
           // Blue is a nice colour for a person?
           bgColor: '#7fa2ff',
           // Use a slightly darker version of the bgColor for the border
           borderColor: 'darken'
   } ]
};


collData['relation_types'] = [ {
    type     : 'Anaphora',
    labels   : ['Anaphora', 'Ana'],
    // dashArray allows you to adjust the style of the relation arc
    dashArray: '3,3',
    color    : 'purple',
    /* A relation takes two arguments, both are named and can be constrained
        as to which types they may apply to */
    args     : [
        // 
        {role: 'Anaphor', targets: ['Person'] },
        {role: 'Entity',  targets: ['Person'] }
    ]
} ];

collData['event_types'] = [ {
    type   : 'Assassination',
    labels : ['Assassination', 'Assas'],
    bgColor: 'lightgreen',
    borderColor: 'darken',
    /* Unlike relations, events originate from a span of text and can take
        several arguments */
    arcs   : [
        {type: 'Victim', labels: ['Victim','Vict'] },
        // Just like the event itself, its arguments can be styled
        {type: 'Perpetrator', labels: ['Perpetrator','Perp'], color: 'green' }
    ]
} ];


collData['entity_attribute_types'] = [ {
    type  : 'Notorious',
    /* brat supports multi-valued attributes, but in our case we will only
        use a single value and add a glyph to the visualisation to indicate
        that the entity carries that attribute */
    values: { 'Notorious': { 'glyph': 'â˜…' } }
} ];

var docData = {
    // Our text of choice
    text     : "Ed O'Kelley was the man who shot the man who shot Jesse James.",
    // The entities entry holds all entity annotations
    entities : [
        /* Format: [${ID}, ${TYPE}, [[${START}, ${END}]]]
            note that range of the offsets are [${START},${END}) */
        ['T1', 'Person', [[0, 11]]],
        ['T2', 'Person', [[20, 23]]],
        ['T3', 'Person', [[37, 40]]],
        ['T4', 'Person', [[50, 61]]],
    ],
};


docData['attributes'] = [
    // Format: [${ID}, ${TYPE}, ${TARGET}]
    ['A1', 'Notorious', 'T4']
];

docData['relations'] = [ 
    // Format: [${ID}, ${TYPE}, [[${ARGNAME}, ${TARGET}], [${ARGNAME}, ${TARGET}]]]
    ['R1', 'Anaphora', [['Anaphor', 'T2'], ['Entity', 'T1']]]
];

/* Events also have trigger annotations, these are spans that are not
    visualised. This enables sharing of triggers when this is desirable, such
    as in the sentence "He robbed the bank and the post office", where
    "robbed" gives rice to two separate events that shares a single trigger */
docData['triggers'] = [
    // The format is identical to that of entities
    ['T5', 'Assassination', [[45, 49]]],
    ['T6', 'Assassination', [[28, 32]]]
];

docData['events'] = [
    // Format: [${ID}, ${TRIGGER}, [[${ARGTYPE}, ${ARGID}], ...]]
    ['E1', 'T5', [['Perpetrator', 'T3'], ['Victim', 'T4']]],
    ['E2', 'T6', [['Perpetrator', 'T2'], ['Victim', 'T3']]]
];

</script>

<p>
	
</p>

</body>
</html>